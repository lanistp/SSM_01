<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!--1.扫描包 -->
	<context:component-scan base-package="cn.it">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--2. 导入外部配置文件 -->
	<context:property-placeholder
		location="classpath:dbconfig.properties" />
	<!--3 数据源配置 -->


	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	
	</bean>
	<!--4.1 整合mybatis，操作数据库 导入mybatis-spring-1.3.0.jar -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--3.1.1 指定mybatis全局配置文件位置 -->
		<property name="configLocation"
			value="classpath:mybatis/mybatis.xml"></property>
		<!--3.1.2 配置数据源 -->
		<property name="dataSource" ref="ds"></property>
		<!--3.1.3 指定mybatis的xml映射文件的位置 -->
		<property name="mapperLocations"
			value="classpath:mybatis/mapper/*.xml"></property>
	</bean>
	<!--4.2 把每个dao接口的实现也加入ioc容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.it.dao"></property>
	</bean>

	<!--5.事务管理器 -->
	<bean id="tm"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>

	<!--6.基于xm的切面配置 -->
	<aop:config>
		<!-- 5.1切入点 -->
		<aop:pointcut
			expression="execution(* cn.it.ser*.*.*(..))" id="txPoint" />
		<!-- 5.2 通知方法 -->
		<aop:advisor advice-ref="myTx" pointcut-ref="txPoint" />
	</aop:config>

	<!--7.事务增强 -->
	<tx:advice id="myTx" transaction-manager="tm">
		<tx:attributes>
			<!-- 6.1所有的方法都添加事务 -->
			<tx:method name="*" rollback-for="java.lang.Exception" />
			<!-- 6.2 get开头的方法，为只读 -->
			<tx:method name="get*" read-only="true" />
			<!-- 6.3 insertEmp方法的隔离级别为：读未提交 -->
			<tx:method name="get*" isolation="READ_UNCOMMITTED" />
		</tx:attributes>
	</tx:advice>


</beans>